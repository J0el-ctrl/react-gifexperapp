{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGriditem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGriditem","className","src","alt","GifGrid","setImages","useEffect","then","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAqB5C,OAGI,sBAAMC,SAjBS,SAACC,GAChBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAYlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAzBY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCLdG,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DACfC,EADe,0FACwEC,UAAUH,GADlF,qBAGJI,MAAMF,GAHF,cAGfG,EAHe,gBAIFA,EAAKC,OAJH,uBAIdC,EAJc,EAIdA,KAEDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACrB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAVpB,kBAadM,GAbc,4CAAD,sDCEXO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE/B,OACI,sBAAKc,UAAU,OAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJHO,EAAU,SAAC,GAAiB,IAAfnB,EAAc,EAAdA,SAAc,EAGJd,mBAAS,IAHL,mBAGzB2B,EAHyB,KAGjBO,EAHiB,KAepC,OATAC,qBAAU,WACNtB,EAAQC,GACPsB,KAAKF,KACR,CAACpB,IAOI,qCACH,6BAAKA,IACL,qBAAKgB,UAAU,YAAf,SAGYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADCA,EAAIC,aCvBpBY,EAAe,WAAM,MAIMrC,mBAAS,CAAC,cAJhB,mBAIvBsC,EAJuB,KAIXvC,EAJW,KAU9B,OACI,qCAEI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEAuC,EAAWf,KAAI,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEAA,SAAUA,GADLA,YCnBlByB,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.27f86dfd.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategories(cats=>[inputValue,...cats]);\r\n            setInputValue('');\r\n\r\n\r\n        }\r\n        //console.log('submit efectuado')\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        \r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            \r\n            />\r\n            \r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}","\r\n    export const getGifs=async(category)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?api_key=XMm1f323G5gS5oSMexCVnUPzo508NN8I&q=${encodeURI(category)}&limit=9`;\r\n\r\n    const resp=await fetch(url);\r\n    const {data}=await resp.json();\r\n\r\n    const gifs=data.map(img=>{\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n    \r\n\r\n}","import React from 'react'\r\n\r\n\r\nexport const GifGriditem = ({title,url}) => {\r\n  //  console.log(id,title,url);\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React,{useState,useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport { GifGriditem } from './GifGriditem';\r\n\r\nexport const GifGrid = ({ category}) => {\r\n    //const [count, setCount] = useState(0);\r\n\r\n        const [images, setImages] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n        .then(setImages);\r\n    },[category])\r\n\r\n    \r\n\r\n \r\n    \r\n    return (\r\n           <>\r\n        <h1>{category}</h1>\r\n        <div className=\"card-grid\">\r\n            \r\n                {\r\n                    images.map(img=>(\r\n                        <GifGriditem \r\n                        key={img.id}\r\n                        {...img}\r\n                        />\r\n                    ))  \r\n                }\r\n            \r\n        </div>\r\n           \r\n           </>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories=['One Punch','Samurai X','Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    //const handleAdd=()=>{\r\n     //   setCategories(['los vengadoress',...categories]);\r\n    //}\r\n\r\n    return (\r\n        <>\r\n            \r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            \r\n\r\n            <ol> \r\n            {\r\n            categories.map(category=>\r\n             <GifGrid \r\n             key={category}\r\n             category={category} />\r\n            )\r\n            }\r\n\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { GifExpertApp } from './GifExpertApp';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}